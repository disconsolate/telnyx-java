/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.ListAvailablePhoneNumbersResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NumberSearchApi
 */
public class NumberSearchApiTest {

    private final NumberSearchApi api = new NumberSearchApi();

    /**
     * List available phone numbers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAvailablePhoneNumbersTest() throws ApiException {
        //String filterPhoneNumberStartsWith = null;
        //String filterPhoneNumberEndsWith = null;
        //String filterPhoneNumberContains = null;
        //String filterLocality = null;
        //String filterAdministrativeArea = null;
        //String filterCountryCode = null;
        //String filterNationalDestinationCode = null;
        //String filterRateCenter = null;
        //String filterNumberType = null;
        //List<String> filterFeatures = null;
        //Integer filterLimit = null;
        //Boolean filterBestEffort = null;
        //Boolean filterQuickship = null;
        //Boolean filterReservable = null;
        //ListAvailablePhoneNumbersResponse response = api.listAvailablePhoneNumbers()
        //        .filterPhoneNumberStartsWith(filterPhoneNumberStartsWith)
        //        .filterPhoneNumberEndsWith(filterPhoneNumberEndsWith)
        //        .filterPhoneNumberContains(filterPhoneNumberContains)
        //        .filterLocality(filterLocality)
        //        .filterAdministrativeArea(filterAdministrativeArea)
        //        .filterCountryCode(filterCountryCode)
        //        .filterNationalDestinationCode(filterNationalDestinationCode)
        //        .filterRateCenter(filterRateCenter)
        //        .filterNumberType(filterNumberType)
        //        .filterFeatures(filterFeatures)
        //        .filterLimit(filterLimit)
        //        .filterBestEffort(filterBestEffort)
        //        .filterQuickship(filterQuickship)
        //        .filterReservable(filterReservable)
        //        .execute();
        // TODO: test validations
    }

//    @Test
//    public void search_for_phone_numbers_in_the_us() {
//        //given
//        ApiClient defaultClient = Configuration.getDefaultApiClient();
//        HttpBearerAuth bearerAuth = (HttpBearerAuth) defaultClient.getAuthentication("bearerAuth");
//        bearerAuth.setBearerToken("KEY0174D6AB1C6DCF691F56EAE3F46C2D93_7LRRZM2E3cQ17pTqWzMmzT");
//
//        NumberSearchApi apiInstance = new NumberSearchApi();
//        String countryCode = "US";
//        ListAvailablePhoneNumbersResponse response = null;
//
//        //when
//        try {
//            response = apiInstance.listAvailablePhoneNumbers()
//                    .filterCountryCode(countryCode)
//                    .execute();
//        } catch (Exception e) {
//            assert false;
//        }
//
//        //then
//        assert response != null;
//        assert !response.getData().isEmpty();
//    }


}
